/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole.StudentRoleWorkResp01;

import Business.Business;
import Business.Course.Course;
import Business.Profiles.StudentProfile;
import UserInterface.WorkAreas.StudentRole.StudentWorkAreaJPanel;
import java.awt.Panel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sujata
 */
public class CourseWorkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BrowseCoursesJPanel
     */
    javax.swing.JPanel CardSequencePanel;
    Business business;
    StudentProfile student;

    public CourseWorkJPanel(Business business, StudentProfile student, JPanel cp) {
        initComponents();
        this.business = business;
        this.student = student;
        this.CardSequencePanel = cp;
        populateCourseTable();
        txtCourseDescription.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBrowseCourses = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListCourses = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        lblCourseDescription = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCourseDescription = new javax.swing.JTextArea();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        lblBrowseCourses.setBackground(new java.awt.Color(102, 102, 102));
        lblBrowseCourses.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblBrowseCourses.setForeground(new java.awt.Color(255, 255, 255));
        lblBrowseCourses.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBrowseCourses.setText("Browse Courses");

        tblListCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Name", "Course ID", "Instructor", "Semester", "Language", "Region", "Term Offered In", "Instructor rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListCourses);

        btnSelect.setBackground(new java.awt.Color(0, 153, 255));
        btnSelect.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSelect.setForeground(new java.awt.Color(255, 255, 255));
        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        lblCourseDescription.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblCourseDescription.setForeground(new java.awt.Color(255, 255, 255));
        lblCourseDescription.setText("Course Description:");

        txtCourseDescription.setBackground(new java.awt.Color(204, 204, 204));
        txtCourseDescription.setColumns(20);
        txtCourseDescription.setRows(5);
        txtCourseDescription.setEnabled(false);
        jScrollPane2.setViewportView(txtCourseDescription);

        btnBack.setBackground(new java.awt.Color(0, 153, 255));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelect)
                        .addGap(27, 27, 27)
                        .addComponent(lblCourseDescription)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(149, 149, 149))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblBrowseCourses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBrowseCourses)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSelect)
                        .addComponent(lblCourseDescription))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblListCourses.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to View.");
            return;
        } else {
         Course courseInfo = (Course) tblListCourses.getValueAt(selectedRowIndex, 0);
         txtCourseDescription.setText(courseInfo.getCourseDescription());
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel); //navigates back to previous page
//        CardSequencePanel.add("StudentWorkArea", StudentWorkAreaJPanel);
        // layout.previous(CardSequencePanel);
        
        StudentWorkAreaJPanel studentWorkAreaPanel = new StudentWorkAreaJPanel(business, student, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("studentWorkArea", studentWorkAreaPanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBrowseCourses;
    private javax.swing.JLabel lblCourseDescription;
    private javax.swing.JTable tblListCourses;
    private javax.swing.JTextArea txtCourseDescription;
    // End of variables declaration//GEN-END:variables

    private void populateCourseTable() {
        DefaultTableModel model = (DefaultTableModel) tblListCourses.getModel();
        model.setRowCount(0);

        for(Course course : business.getCourseDirectory().getCourseCatalog()) {
            
            Object[] row = new Object[8];
            row[0] = course;
            row[1] = course.getCourseID();
            row[2] = course.getFacultyProfile().getPerson().getName();
            row[3] = course.getTermOfferedIn();
            row[4] = course.getLanguage();
            row[5] = course.getRegion();
            row[6] = course.getTermOfferedIn();
            row[7] = course.getFacultyProfile().getRating();
            
            model.addRow(row);
        }
    }
}
